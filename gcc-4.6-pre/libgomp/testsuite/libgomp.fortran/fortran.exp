load_lib libgomp-dg.exp

global shlib_ext
global ALWAYS_CFLAGS

set shlib_ext [get_shlib_extension]
set lang_library_path	"../libgfortran/.libs"
set lang_link_flags	"-lgfortran"
set lang_test_file_found 0
set quadmath_library_path "../libquadmath/.libs"


# Initialize dg.
dg-init

if { $blddir != "" } {
    # Look for a static libgfortran first.
    if [file exists "${blddir}/${lang_library_path}/libgfortran.a"] {
        set lang_test_file "${lang_library_path}/libgfortran.a"
        set lang_test_file_found 1
	# We may have a shared only build, so look for a shared libgfortran.
    } elseif [file exists "${blddir}/${lang_library_path}/libgfortran.${shlib_ext}"] {
        set lang_test_file "${lang_library_path}/libgfortran.${shlib_ext}"
        set lang_test_file_found 1
    } else {
        puts "No libgfortran library found, will not execute fortran tests"
    }
} elseif [info exists GFORTRAN_UNDER_TEST] {
    set lang_test_file_found 1
    # Needs to exist for libgomp.exp.
    set lang_test_file ""
} else {
    puts "GFORTRAN_UNDER_TEST not defined, will not execute fortran tests"
}

if { $lang_test_file_found } {
    # Gather a list of all tests.
    set tests [lsort [find $srcdir/$subdir *.\[fF\]{,90,95,03,08}]]

    if { $blddir != "" } {
	# We could, perhaps, test for the presence of the quad math lib - but if it 
	# is required then its absence will cause a fail, and if it is not required
	# the additions here should be harmless.
	lappend ALWAYS_CFLAGS "ldflags=-L${blddir}/${quadmath_library_path}/"
	# Allow for spec subsitution.
	lappend ALWAYS_CFLAGS "additional_flags=-B${blddir}/${quadmath_library_path}/"
	set ld_library_path "$always_ld_library_path:${blddir}/${lang_library_path}:${blddir}/${quadmath_library_path}"
    } else {
        set ld_library_path "$always_ld_library_path"
    }
    append ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]
    set_ld_library_path_env_vars

    # Main loop.
    gfortran-dg-runtest $tests ""
}

# All done.
dg-finish
